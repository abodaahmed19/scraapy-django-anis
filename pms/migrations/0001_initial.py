# Generated by Django 5.0.14 on 2025-05-18 08:30

import django.db.models.deletion
import phonenumber_field.modelfields
import pms.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('user_type', models.CharField(choices=[('individual', 'Individual'), ('business', 'Business'), ('driver', 'Driver'), ('admin', 'Admin'), ('staff', 'Staff')], max_length=10)),
                ('name', models.CharField(help_text='Full name', max_length=100)),
                ('email', models.EmailField(help_text='Email address', max_length=100, unique=True)),
                ('lang', models.CharField(default='ar', help_text='Language', max_length=2)),
                ('image', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('contact_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Contact number', max_length=128, region=None)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('business_sub_type', models.CharField(blank=True, help_text="Sousâ€‘type pour user_type='business'", max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Address name', max_length=100)),
                ('address_line1', models.CharField(max_length=100)),
                ('address_line2', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(max_length=100)),
                ('province', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=10)),
                ('country', models.CharField(max_length=100)),
                ('longitude', models.DecimalField(blank=True, decimal_places=18, max_digits=20, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=18, max_digits=20, null=True)),
                ('on_site_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('on_site_contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('address_line1', models.CharField(max_length=100)),
                ('address_line2', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(max_length=100)),
                ('province', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=10)),
                ('country', models.CharField(max_length=100)),
                ('longitude', models.DecimalField(blank=True, decimal_places=18, max_digits=20, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=18, max_digits=20, null=True)),
                ('on_site_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('on_site_contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('operational_address', models.CharField(blank=True, help_text='operational address', max_length=1000, null=True)),
                ('primary_contact_person_name', models.CharField(blank=True, help_text='address', max_length=100, null=True)),
                ('primary_contact_person_position', models.CharField(blank=True, help_text='address', max_length=100, null=True)),
                ('primary_contact_person_contact_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Contact number', max_length=128, null=True, region=None)),
                ('primary_contact_person_email_address', models.CharField(blank=True, help_text='address', max_length=100, null=True)),
                ('cr_number', models.CharField(help_text='cr_number', max_length=10, unique=True)),
                ('vat_number', models.CharField(blank=True, help_text='vat_number', max_length=15, null=True, unique=True)),
                ('cr_document', models.FileField(blank=True, null=True, upload_to=pms.models.documents_upload_path)),
                ('vat_document', models.FileField(blank=True, null=True, upload_to=pms.models.documents_upload_path)),
                ('mwan_license_number', models.CharField(blank=True, help_text='Commercial registration number', max_length=15, null=True, unique=True)),
                ('mwan_license_document', models.FileField(blank=True, null=True, upload_to=pms.models.documents_upload_path)),
                ('product_auto_accept', models.BooleanField(default=False)),
                ('service_auto_accept', models.BooleanField(default=False)),
                ('rental_auto_accept', models.BooleanField(default=False)),
                ('user', models.OneToOneField(limit_choices_to={'user_type': 'business'}, on_delete=django.db.models.deletion.CASCADE, related_name='business_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessAdditionalDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='document name', max_length=150)),
                ('document', models.FileField(upload_to=pms.models.additional_document_upload_path)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_additional_documents', to='pms.businessprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'notification',
                'verbose_name_plural': 'notifications',
                'ordering': ['created_at'],
            },
        ),
    ]
